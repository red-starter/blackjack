// Generated by CoffeeScript 1.10.0
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.App = (function(superClass) {
    extend(App, superClass);

    function App() {
      return App.__super__.constructor.apply(this, arguments);
    }

    App.prototype.defaults = {
      points: 50,
      betSize: 1
    };

    App.prototype.initialize = function() {
      return this.makeGame();
    };

    App.prototype.updatePoints = function() {
      if (this.get('game').get('winner') === 'player') {
        this.set('points', this.get('points') + this.get('betSize'));
      } else {
        this.set('points', this.get('points') - this.get('betSize'));
      }
      return console.log(this.get('points'));
    };

    App.prototype.makeGame = function() {
      var game;
      this.set('game', game = new Game(this.attributes));
      return this.get('game').on('change:winner', (function(_this) {
        return function() {
          return _this.updatePoints();
        };
      })(this));
    };

    return App;

  })(Backbone.Model);

}).call(this);

//# sourceMappingURL=App.js.map
